[{"C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\api\\auth\\accessToken.js":"1","C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\api\\categories\\index.js":"2","C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\api\\categories\\modify\\[id].js":"3","C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\api\\orders\\delivered\\[id].js":"4","C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\api\\orders\\index.js":"5","C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\api\\orders\\[id].js":"6","C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\api\\products\\index.js":"7","C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\api\\products\\[id].js":"8","C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\api\\profile\\changeavatar.js":"9","C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\api\\profile\\changepass.js":"10","C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\api\\register.js":"11","C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\api\\signin.js":"12","C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\api\\users\\changerole\\[id].js":"13","C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\api\\users\\deleteuser\\[id].js":"14","C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\api\\users\\index.js":"15","C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\cart.js":"16","C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\categories\\index.js":"17","C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\create\\[[...id]].js":"18","C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\index.js":"19","C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\loader.js":"20","C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\products\\[id].js":"21","C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\profile\\index.js":"22","C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\profile\\orders\\[id].js":"23","C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\register.js":"24","C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\signin.js":"25","C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\users\\edit-user\\[id].js":"26","C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\users\\index.js":"27","C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\_app.js":"28","C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\_document.js":"29","C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\components\\cartItem.js":"30","C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\components\\filter.js":"31","C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\components\\layout\\footer.js":"32","C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\components\\layout\\navbar.js":"33","C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\components\\loading.js":"34","C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\components\\modal.js":"35","C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\components\\notify.js":"36","C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\components\\orderItem.js":"37","C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\components\\productItem.js":"38","C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\components\\startup.js":"39","C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\components\\toast.js":"40"},{"size":980,"mtime":1658997439310,"results":"41","hashOfConfig":"42"},{"size":930,"mtime":1659187566240,"results":"43","hashOfConfig":"42"},{"size":1201,"mtime":1659250005516,"results":"44","hashOfConfig":"42"},{"size":1166,"mtime":1659006093327,"results":"45","hashOfConfig":"42"},{"size":1577,"mtime":1659173054107,"results":"46","hashOfConfig":"42"},{"size":847,"mtime":1658919748648,"results":"47","hashOfConfig":"42"},{"size":3459,"mtime":1659777877555,"results":"48","hashOfConfig":"42"},{"size":2274,"mtime":1659770440742,"results":"49","hashOfConfig":"42"},{"size":696,"mtime":1658650209540,"results":"50","hashOfConfig":"42"},{"size":939,"mtime":1658588888847,"results":"51","hashOfConfig":"42"},{"size":1033,"mtime":1658038606870,"results":"52","hashOfConfig":"42"},{"size":1271,"mtime":1658566160033,"results":"53","hashOfConfig":"42"},{"size":770,"mtime":1659170227125,"results":"54","hashOfConfig":"42"},{"size":624,"mtime":1659098773372,"results":"55","hashOfConfig":"42"},{"size":532,"mtime":1659007618325,"results":"56","hashOfConfig":"42"},{"size":6176,"mtime":1659781249760,"results":"57","hashOfConfig":"42"},{"size":3445,"mtime":1659682793164,"results":"58","hashOfConfig":"42"},{"size":8609,"mtime":1659781435150,"results":"59","hashOfConfig":"42"},{"size":4020,"mtime":1659777506471,"results":"60","hashOfConfig":"42"},{"size":103,"mtime":1657980867464,"results":"61","hashOfConfig":"42"},{"size":1921,"mtime":1658227174147,"results":"62","hashOfConfig":"42"},{"size":6593,"mtime":1659781553831,"results":"63","hashOfConfig":"42"},{"size":5582,"mtime":1659778663380,"results":"64","hashOfConfig":"42"},{"size":3821,"mtime":1659781788187,"results":"65","hashOfConfig":"42"},{"size":3800,"mtime":1659781883662,"results":"66","hashOfConfig":"42"},{"size":2830,"mtime":1659781823850,"results":"67","hashOfConfig":"42"},{"size":3097,"mtime":1659781917209,"results":"68","hashOfConfig":"42"},{"size":800,"mtime":1658402015072,"results":"69","hashOfConfig":"42"},{"size":1512,"mtime":1659782070326,"results":"70","hashOfConfig":"42"},{"size":1753,"mtime":1658477436734,"results":"71","hashOfConfig":"42"},{"size":1898,"mtime":1659777649289,"results":"72","hashOfConfig":"42"},{"size":75,"mtime":1657718027337,"results":"73","hashOfConfig":"42"},{"size":4070,"mtime":1659682977593,"results":"74","hashOfConfig":"42"},{"size":402,"mtime":1658044451852,"results":"75","hashOfConfig":"42"},{"size":3591,"mtime":1659693229116,"results":"76","hashOfConfig":"42"},{"size":879,"mtime":1657980034212,"results":"77","hashOfConfig":"42"},{"size":794,"mtime":1658746685564,"results":"78","hashOfConfig":"42"},{"size":2767,"mtime":1659778189195,"results":"79","hashOfConfig":"42"},{"size":2391,"mtime":1659778611617,"results":"80","hashOfConfig":"42"},{"size":725,"mtime":1658218967468,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"aojwex",{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179"},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183"},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190"},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206"},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210"},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\api\\auth\\accessToken.js",[],[],"C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\api\\categories\\index.js",[],[],"C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\api\\categories\\modify\\[id].js",[],[],"C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\api\\orders\\delivered\\[id].js",[],[],"C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\api\\orders\\index.js",[],[],"C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\api\\orders\\[id].js",[],[],"C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\api\\products\\index.js",[],[],"C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\api\\products\\[id].js",[],[],"C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\api\\profile\\changeavatar.js",[],[],"C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\api\\profile\\changepass.js",[],[],"C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\api\\register.js",[],[],"C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\api\\signin.js",[],[],"C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\api\\users\\changerole\\[id].js",[],[],"C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\api\\users\\deleteuser\\[id].js",[],[],"C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\api\\users\\index.js",[],[],"C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\cart.js",[],[],"C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\categories\\index.js",[],[],"C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\create\\[[...id]].js",["214"],[],"import Filebase from 'react-file-base64';\r\n\r\nimport { useState, useRef, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getData, postData, putData } from 'utils/fetchData';\r\nimport { useRouter } from 'next/router';\r\n\r\nconst CreateProduct = () => {\r\n\r\n    const select = useRef();\r\n\r\n    const { auth, categories, notify } = useSelector( state => state )\r\n    \r\n    \r\n    // defining form states and values\r\n    const initialValue = { title: \"\", description: \"\", content: \"\", category:\"\", inStock: \"\", price: \"\" };\r\n    const [ productData, setProductData ] = useState(initialValue)\r\n    const { category, title, description, inStock, price, content } = productData\r\n    const [ images, setImages ] = useState([]);\r\n    const [ selectedCat, setSelectedCat ] = useState(null) \r\n    \r\n    \r\n    const router = useRouter();\r\n    const {id} = router.query;\r\n    const dispatch = useDispatch();\r\n\r\n    \r\n    \r\n    \r\n    //getting product data if its updating a product\r\n    useEffect(() => {\r\n        if(id) {\r\n            getData(`/products/${id}`)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                if(result.error) return dispatch( {type: 'NOTIFY', payload: result });\r\n                select.current.value = result.category\r\n                setProductData( result )\r\n                setImages( result.images )\r\n            })\r\n        }\r\n    }, [id, dispatch])\r\n    \r\n    //checking authentication\r\n    if(!auth || auth.user && auth.user.role !== 'admin' ) return null\r\n    \r\n    const handleInpChange = (e) => {\r\n        const { name , value } = e.target;\r\n        \r\n        setProductData({ ...productData, [name] : value})\r\n    }\r\n    \r\n    \r\n    //giving images and saving them in (images) state variable\r\n    const handleImageUpload = (obj) => {\r\n        let newImages = [];\r\n        let num = 0;\r\n        let error = '';\r\n        const files = [...obj];\r\n        \r\n        \r\n        if(files.length === 0) return dispatch({ type: 'NOTIFY', payload: { error: 'file does not exist'}});\r\n\r\n        files.forEach(file => {\r\n            if( file.type !== 'image/jpeg' && file.type !== 'image/png') {\r\n                return error = 'file types must be jpeg or png'\r\n            }\r\n            num += 1;\r\n            if(num <= 5 ) newImages.push(file);\r\n            return newImages\r\n        });\r\n\r\n        if(error) dispatch({ type: 'NOTIFY', payload: { error }})\r\n        if( images.length + newImages.length > 5) return dispatch({ type: 'NOTIFY', payload: { error: 'only 5 files alowed'}});\r\n        \r\n        setImages([...images, ...newImages])\r\n    };\r\n\r\n    \r\n    const handleDeleteImg = (image) => {\r\n        setImages(images.filter( item => image.name !== item.name))\r\n    };\r\n\r\n    \r\n    //handling create Products\r\n    const handleSubmit = () => {\r\n        //checking the inputs \r\n        if( !auth || auth.user.role !== 'admin' ) return dispatch({ type: 'NOTIFY', payload: { error: 'authentication error'}});\r\n        if( !title || !category || category === 'all' || !description || !content || !inStock || !price ) return dispatch( { type: 'NOTIFY', payload: {error: 'please add all fields'}})\r\n        if(images.length === 0) return dispatch( { type: 'NOTIFY', payload : { error: 'please select at least one image'}});\r\n        const imageUrls = images.map(image => ({ publice_id: '', url: image.url? image.url : image.base64}))\r\n        \r\n        //updating the product if id exist\r\n        dispatch({type: 'NOTIFY', payload: {loading: 'please wait...'}})\r\n        if(id) {\r\n            putData(`/products/${id}`, {...productData, images: imageUrls} , auth.access_token)\r\n                .then( response => response.json())\r\n                .then( (result) => dispatch({ type: 'NOTIFY', payload: result}) );\r\n        } else {\r\n            postData('/products', {...productData, images: imageUrls}, auth.access_token)\r\n                .then( response => response.json())\r\n                .then( (result) =>  {\r\n                    dispatch({ type: 'NOTIFY', payload: result})\r\n                    if(!result.error) {\r\n                        setProductData(initialValue);\r\n                        setImages([])\r\n                    }\r\n                })\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            \r\n            <div className=\"row my-4\">\r\n                    <div className=\"col-md-6\">\r\n                            <input type=\"text\" name=\"title\" value={title} className=\"form-control mb-3 w-100\" placeholder=\"title...\" onChange={handleInpChange}/>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6\">\r\n                                    <div className=\"input-group mb-3\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\">$</span>\r\n                                        </div>\r\n                                        <input type=\"text\" name=\"price\" className=\"form-control \" value={price} placeholder=\"price\" onChange={handleInpChange}/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-6\">\r\n                                    <div className=\"input-group mb-3\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\">inStock: </span>\r\n                                        </div>\r\n                                        <input type=\"number\" name=\"inStock\" value={inStock} className=\"form-control\" onChange={handleInpChange}/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <textarea placeholder=\"description\" value={description} name=\"description\" className=\"form-control mb-3 w-100\" cols=\"4\" rows=\"3\" onChange={handleInpChange}></textarea>\r\n                            <textarea placeholder=\"content\" value={content} name=\"content\" className=\"form-control mb-3 w-100\" cols=\"4\" rows=\"4\" onChange={handleInpChange}></textarea>\r\n                            <select ref={select} value={category} name=\"category\" className=\"form-select d-block mb-3 w-100\" onChange={handleInpChange}>\r\n                                <option value=\"all\">all produts</option>\r\n                                {\r\n                                    categories.map( cat => (\r\n                                        <option key={cat._id} value={cat._id}>{cat.name}</option>\r\n                                    ))\r\n                                }\r\n                            </select> \r\n                            <button className=\"btn btn-secondary\" disabled={notify.loading} onClick={handleSubmit}>\r\n                                { id ? \"Update\" : \"Create\"}\r\n                            </button>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"col-md-6\">\r\n                        <div className=\"input-group mb-3\">\r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text\">Upload</span>\r\n                            </div>\r\n                            <div className=\"custom-file border\">\r\n                                <span style={{opacity: '0'}}>\r\n                                    <Filebase multiple={true} className=\"custom-file-input mb-3 w-100\" onDone={(obj) => handleImageUpload(obj)} />\r\n                                </span>\r\n                                {/* <input type=\"file\" className=\"custom-file-input mb-3 w-100 \" multiple accept='image/*' onChange={handleImageUpload}/> */}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"up_images\">\r\n                            {\r\n                                images && images.map( (img, index) => (\r\n                                    <div key={index} className=\"img\" >\r\n                                        <img src={ img.base64? img.base64 : img.url } alt=\"\" className=\"img-thumbnail rounded\"/>\r\n                                        <span onClick={() => handleDeleteImg(img)} >x</span>\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                \r\n            </div>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateProduct","C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\index.js",["215","216"],[],"import { getData } from \"utils/fetchData\";\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport filtering from \"utils/filtering\";\nimport ProductItem from \"components/productItem\";\nimport Filter from 'components/filter';\n\n\n\nexport default function Home({ productsList, more }){\n\n  const { categories, auth, products } = useSelector( state => state);\n  const router   = useRouter();\n  \n  //defining state for pagination\n  const [page, setPage] = useState(router.query.page || 1)\n  \n  \n  const [ isChecked, setIschecked ] = useState(false)\n  const [ isAllChecked, setIsAllChecked ] = useState(false);\n  const [ disDeleteAll , setdisDeleteAll ] = useState(true);\n\n  const dispatch = useDispatch();\n  \n  \n  useEffect(() => {\n    if(productsList) dispatch({ type: 'ADD_PRODUCT', payload: productsList})\n  }, [productsList])\n\n  \n  useEffect(() => {\n    const arr = products.filter(product => product.checked);\n    if(arr.length > 0){\n      setdisDeleteAll(false)\n    } else { \n      setdisDeleteAll(true)\n    }\n  }, [products])\n\n  \n  \n  \n  \n  useEffect(() => {\n    checkTheCheck()\n  }, [products])\n  const checkTheCheck = () => {\n    const arr = products.filter( product => !product.checked)\n    if(arr.length > 0){\n      setIsAllChecked(false)\n    }else {\n      setIsAllChecked(true)\n    } \n  }\n  \n  \n\n  const handleCheckAll = () => {\n    let newProducts = [];\n    products.forEach( product => \n      newProducts.push({...product, checked : !isChecked})\n    );\n    dispatch({ type: 'ADD_PRODUCT', payload: newProducts });\n    setIschecked(!isChecked)\n    setIsAllChecked(!isAllChecked)\n  };\n\n\n  const handlePagination = (e, option) => {\n    if(option.direc === 'next'){\n      filtering({router, page: page + 1});\n      setPage(page + 1)\n    } else {\n      if(page > 1){\n        setPage(page - 1)\n        filtering({router, page: page - 1});\n      } \n    }\n  };\n\n  \n  const handleDeleteAll = () => {\n    const deletingProducts = products.filter( product => product.checked ).map(product => product._id)\n    dispatch({type: 'MODAL', payload: {state: products, item: [...deletingProducts], actionType: 'ADD_PRODUCT', auth}})\n    \n  }\n\n\n  return (\n    <>\n    <div className=\"container\">\n      <Filter categories={categories} />\n      <span className=\"p-2 align-items-center justify-content-center bg-danger\"><input type=\"checkbox\" checked={isAllChecked}  onChange={handleCheckAll} /><button className=\"btn btn-danger\" onClick={ handleDeleteAll } style={{padding: '1px 1px'}} data-toggle=\"modal\" data-target=\"#exampleModal\" disabled={disDeleteAll}>delete all</button></span>\n    </div>\n    <div className=\"products_list\">\n      {\n        !products && <h2>there is no product</h2>\n      }\n      {\n        products && \n        products.map( product => {\n          return <ProductItem key={product._id} product={product}/>\n        })\n      }\n    </div>\n    <nav aria-label=\"Page navigation example\" className=\"d-flex justify-content-end mx-3\">\n      <ul className=\"pagination d-flex flex-row-reverse\">\n        <li className={`page-item ${page === 1 && 'disabled'}`}><a className=\"page-link\" href=\"#\" onClick={(e) => handlePagination(e, { direc : 'prev' })}>Previous</a></li>\n        <li className=\"page-item\"><a className=\"page-link\" href=\"#\" >{page}</a></li>\n        <li className={`page-item ${!more && 'disabled'}`}><a  className=\"page-link\" href=\"#\" onClick={(e) => handlePagination(e, { direc : 'next' })} >Next</a></li>\n      </ul>\n    </nav>\n    </>\n  )\n};\n\nexport async function getServerSideProps({ query }){\n  const page = query.page || 1;\n  const sort = query.sort || '';\n  const category = query.category || 'all';\n  const search = query.search || 'all'\n  const response = await getData(`/products?limit=${3}&page=${page}&sort=${sort}&category=${category}&title=${search}`);\n  const data = await response.json();\n\n  return {\n    props : {\n      productsList : data.products || data,\n      more: data.more || false\n    }\n  }\n}","C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\loader.js",[],[],"C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\products\\[id].js",["217","218","219"],[],"import { useState } from \"react\";\r\nimport { getData } from \"utils/fetchData\";\r\nimport styles from 'styles/DetailsProduct.module.css';\r\n\r\n\r\nexport default function ProductDetail( { product } ) {\r\n    const [ tab, setTab ] = useState(0);\r\n\r\n    const isActive = (index) => {\r\n        if( index === tab ){\r\n            return styles.active_img\r\n        } else {\r\n            return \"\"\r\n        }\r\n    };\r\n\r\n    const handleImgClick = (index) => {\r\n        setTab(parseInt(index))\r\n    }\r\n    console.log(product.images[0].url)\r\n    return (\r\n        <div className=\"container details mt-3\">\r\n            <div className=\"row\">\r\n                <div className=\" col-md-6\" >\r\n                    <img src={product.images[tab].url} className=\"d-block rounded img-thumbnail w-100\" style={{height: \"350px\"}} />\r\n                    <div className=\"row mx-0\">\r\n                        {\r\n                            product.images.map( (image,index) => {\r\n                                return <img key={index} src={image.url} className={`${isActive(index)} img-thumbnail rounded`} style={{cursor: 'pointer', width: '80px', height: '80px'}} alt={image.url} onClick={() => handleImgClick(index)} />\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div style={{}} className=\"col-md-6\">\r\n                    <h5 className=\"text-capitalize \">{product.title}</h5>\r\n                    <p>{product.content}</p>\r\n                    <button className=\"btn btn-secondary\">Buy Now</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport async function getServerSideProps(context) {\r\n    const { params } = context;\r\n    const response = await getData(`http://localhost:3000/api/products/${params.id}`);\r\n    const data = await response.json();\r\n    return {\r\n        props : {\r\n            product : data\r\n        }\r\n    }\r\n}","C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\profile\\index.js",["220"],[],"import { useRouter } from \"next/router\";\r\nimport { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { val } from \"utils/val\";\r\nimport { patchData } from \"utils/fetchData\";\r\nimport uploadImage from 'utils/uploadImage';\r\nimport OrderItem from \"components/orderItem\";\r\nimport Link from \"next/link\";\r\n\r\n\r\nexport default function Profile( ) {\r\n    //export from store\r\n    const { auth, notify, orders } = useSelector(state => state );\r\n    \r\n    const initialValue = {newPassword : '', cf_newPassword: '', email : auth.user? auth.user.email : ''}\r\n    const [ data, setData ] = useState(initialValue);\r\n    const { email, newPassword, cf_newPassword } = data;\r\n\r\n\r\n    const router = useRouter();\r\n    const dispatch = useDispatch();\r\n    \r\n    if(!auth.user) return null\r\n    \r\n    const handleInpChange = (e) => {\r\n        const { name, value } = e.target;\r\n\r\n        setData({...data, [name] : value})\r\n    };\r\n\r\n    const handleSubmit = async () => {\r\n        // if(newPassword){\r\n        //     changePass();\r\n        // }\r\n        // if(data.selectedFile) {\r\n        //     changeAvatar();\r\n        // }\r\n        changeAvatar()\r\n    };\r\n\r\n    const changePass = async() => {\r\n        const errorMessage = val(email, newPassword, cf_newPassword);\r\n        if(errorMessage) return dispatch( { type : 'NOTIFY', payload : { error: errorMessage}});\r\n        dispatch( { type : 'NOTIFY', payload : {loading: 'please wait...'}});\r\n        const response = await patchData('http://localhost:3000/api/profile/changepass', data, auth.access_token)\r\n        const result = await response.json();\r\n        if(result.error) return dispatch({ type: 'NOTIFY', payload : result});\r\n        return dispatch( { type :'NOTIFY', payload : { success : 'your password changed successfully'}})\r\n    };\r\n\r\n    const changeAvatar = async() => {\r\n        const file = data.selectedFile[0];\r\n        if(file.type !== 'image/jpeg' && file.type !== 'image/png' ) return dispatch({ type: 'NOTIFY', payload : { error: 'file type must be jpeg or png'}})\r\n        dispatch( { type : 'NOTIFY', payload : { loading: 'please wait' } });\r\n\r\n        uploadImage(data.selectedFile);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row my-5 \" >\r\n                <div className=\"col-md-4 px-4 py-4 bg-light\" style={{borderRadius: \"5px\"}}> \r\n                    <div className='avatar'>\r\n                        <img className=\"profileImage\" src={auth.user.avatar}  alt={auth.user.avatar} />\r\n                        <span className=\"text-center imageSpan\">\r\n                            <span className=\"cameraicon\"><i className=\"fas fa-camera\"></i></span>\r\n                            <span className=\"d-block \" id=\"myspan\" >change avatar</span>\r\n                            <input type=\"file\" multiple={false} name=\"up_file\" onChange={(e) => {console.log(e.target.files);setData({...data, selectedFile: e.target.files })}}/>\r\n                        </span>\r\n                    </div>                    \r\n                    <div className=\"changePassword\">\r\n                        <input type=\"email\" className=\"form-control my-2\" disabled={true}  value={auth.user.email}/>\r\n                        <h6>change password: </h6>\r\n                        <input type=\"password\" className=\"form-control my-2\" placeholder=\"new password...\" name=\"newPassword\" onChange={handleInpChange} />\r\n                        <input type=\"password\" className=\"form-control my-2\" placeholder=\"confirm new password...\" name=\"cf_newPassword\" onChange={handleInpChange} />\r\n                        <button className=\"btn btn-secondary\" onClick={handleSubmit} disabled={notify.loading}>update</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-8 p-4 bg-light table-responsive\">\r\n                    {\r\n                        !orders ? <h1> you have no orders</h1>\r\n                        : \r\n                        (\r\n                            <>\r\n                                <h2>Orders : </h2>\r\n                                <table className=\"table-bordered table-hover   w-100\" style={{minWidth: '600px'}}>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <td className=\"p-2\">ID</td>\r\n                                            <td className=\"p-2\">date</td>\r\n                                            <td className=\"p-2\">delivered</td>\r\n                                            <td className=\"p-2\">paid</td>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {\r\n                                            orders.map( order => (\r\n                                                <tr key={order._id}>\r\n                                                    <td className=\"p-2\"><Link href={`http://localhost:3000/profile/orders/${order._id}`} >{order._id}</Link></td>\r\n                                                    <td className=\"p-2\">{new Date(order.createdAt).toLocaleDateString()}</td>\r\n                                                    <td className=\"p-2\">\r\n                                                        { order.delivered ? \r\n                                                            <li className=\"fas fa-check text-success\"></li>:\r\n                                                            <i className=\"fas fa-times text-danger\"></i>\r\n                                                        }\r\n                                                    </td>\r\n                                                    <td className=\"p-2\">\r\n                                                        { order.paid ? \r\n                                                            <li className=\"fas fa-check text-success\"></li>:\r\n                                                            <i className=\"fas fa-times text-danger\"></i>\r\n                                                        }\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))\r\n                                        }\r\n                                    </tbody>\r\n                                </table>\r\n                            </>\r\n                        )\r\n                        \r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\profile\\orders\\[id].js",["221","222"],[],"import { useSelector, useDispatch } from \"react-redux\";\r\nimport { patchData } from \"utils/fetchData\";\r\nimport { useEffect, useState } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport { updateItem } from \"store/Actiontypes\";\r\n\r\nexport default function OrderDetails() {\r\n    const { orders, auth } = useSelector(state => state);\r\n\r\n    const dispatch = useDispatch();\r\n    const router = useRouter();\r\n    const { id } = router.query;\r\n\r\n    const [ orderDetails, setOrderDetails ] = useState(null)\r\n\r\n    \r\n    useEffect(() => {\r\n        if(orders) {\r\n            const ord = orders.filter( order => order._id === id);\r\n            \r\n            if(!ord) {\r\n                router.push('/404')\r\n            }\r\n            setOrderDetails(ord[0])\r\n        }\r\n    }, [orders]);\r\n    \r\n    if(!auth.user) return null\r\n    \r\n    const handlePayment = async() => {\r\n        const response = await patchData(`/orders/${orderDetails._id}`, null, auth.access_token)\r\n        const result = await response.json();\r\n\r\n        if(result.error) return dispatch( { type: 'NOTIFY', payload: result});\r\n\r\n        dispatch(updateItem(orders, orderDetails._id, {...orderDetails, paid: result.data.paid, paidAt: result.data.paidAt }, 'ADD_ORDERS'))\r\n        return dispatch( { type : 'NOTIFY', payload : { success : result.message}})\r\n    };\r\n\r\n    const handleDelivered = async() => {\r\n        dispatch({ type : 'NOTIFY', payload: { loading: 'please wait...'}});\r\n\r\n        const response = await patchData(`/orders/delivered/${orderDetails._id}`, null, auth.access_token);\r\n        const result = await response.json();\r\n\r\n        if( result.error ) return dispatch({ type: \"NOTIFY\", payload : result });\r\n\r\n        dispatch({ type : \"NOTIFY\", payload: { success : \"order updated\"}});\r\n        if(orderDetails.paid) { \r\n            dispatch(updateItem(orders, orderDetails._id, {...orderDetails, delivered: true} ))\r\n        } else {\r\n            dispatch(updateItem(orders, orderDetails._id, {...orderDetails, paid: true, paidAt: result.data.paidAt, delivered: true, method: result.data.method} ))\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"container d-flex justify-content-around\">\r\n            <div className=\"details my-4\" >\r\n                {\r\n                    orderDetails && (\r\n                        <>\r\n                            <h1 className=\"mb-3\">{orderDetails._id}</h1>\r\n                            <h3>shipping</h3>\r\n                            <ul style={{listStyle: \"none\"}}>\r\n                                <li>Address : { orderDetails.address }</li>\r\n                                <li>Telephone : { orderDetails.telephone }</li>\r\n                                <li>User ID : { orderDetails.user }</li>\r\n                            </ul>\r\n                            <div className={`alert ${ orderDetails.delivered ? 'alert-success' : 'alert-danger'} d-flex justify-content-between align-items-center`}>\r\n                                {\r\n                                    orderDetails.delivered ? `delivered` : 'not delivered'\r\n                                }\r\n                                {\r\n                                    auth.user.role === 'admin' && auth.user.root && !orderDetails.delivered && (\r\n                                        <button className=\"btn btn-secondary\" onClick={handleDelivered}>MARK AS DELIVERED</button>\r\n                                    )\r\n\r\n                                }\r\n                            </div>\r\n                            <div className={`alert ${ orderDetails.paid ? 'alert-success' : 'alert-danger'}`}>\r\n                                {\r\n                                    orderDetails.paid ? `paid at ${ orderDetails.paidAt }` : 'not paid'\r\n                                }\r\n                            </div>\r\n                            <h3>cart: </h3>\r\n                            <div className=\"table-responsive\">\r\n                                <table className=\"table-bordered w-100\" >\r\n                                    <tbody>\r\n                                        {\r\n                                            orderDetails && orderDetails.cart.map( item => (\r\n                                                <tr key={item._id}>\r\n                                                    <td className=\"p-1\"><img className=\"img-thumbnail w-100\" style={{height: '80px', maxWidth: '80px'}} src={item.images[0].url} alt={item.images[0].url} /></td>\r\n                                                    <td className=\"p-1\">\r\n                                                        <h6 className=\"text-danger text-capitalize\">{item.title}</h6>\r\n                                                        <h6>{item.quantity} x {item.price} = {item.quantity * item.price} $</h6>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))\r\n                                        }\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </>\r\n                    )\r\n                }\r\n            </div>\r\n            {\r\n                orderDetails && !orderDetails.paid && auth.user && auth.user.role !== 'admin' &&(\r\n                <div className=\"payment-button p-4\">\r\n                    <h2>payment: </h2>\r\n                    <button className=\"btn btn-primary\" onClick={handlePayment}>PayPal</button>\r\n                </div>)\r\n            }\r\n        </div>\r\n    )\r\n};","C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\register.js",["223"],[],"import Navbar from \"@/layout/navbar\";\r\nimport Notify from 'components/notify';\r\nimport Link from 'next/link';\r\nimport { useRouter } from 'next/router';\r\nimport { useRef, useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { val } from 'utils/val';\r\nimport { postData } from \"utils/fetchData\";\r\n\r\nexport default function Register(){\r\n    const auth = useSelector( state => state.auth );\r\n    const dispatch = useDispatch();\r\n    \r\n    const router = useRouter();\r\n    useEffect(() => {\r\n        if(Object.keys(auth).length !== 0){\r\n            router.push('/')\r\n        }\r\n    }, [auth])\r\n    \r\n    const initialValue = { email: \"\", password: \"\", cf_password: \"\"}\r\n    const [ userData, setUserData ] = useState(initialValue);\r\n    const { email, password, cf_password } = userData\r\n    const inputChangeHandle = (e) => {\r\n        const { name, value } = e.target;\r\n        setUserData({ \r\n            ...userData,\r\n            [name] : value\r\n        })\r\n    }\r\n    const passwordInp = useRef();\r\n    const passwordInp2 = useRef();\r\n    const handleChange = (e) =>{\r\n        if(e.target.checked){\r\n            passwordInp.current.type = \"text\";\r\n            passwordInp2.current.type = \"text\";\r\n        } else {\r\n            passwordInp.current.type = \"password\";\r\n            passwordInp2.current.type = \"password\";\r\n        }\r\n    }\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const ErrorMessage = val(email, password, cf_password)\r\n        if(ErrorMessage) return dispatch( { type: \"NOTIFY\" , payload : { error : ErrorMessage}})\r\n        dispatch({ type : 'NOTIFY', payload : { loading : \"please wait..\"} });\r\n        const res = await postData('/api/register', userData);\r\n        const data = await res.json();\r\n        return dispatch( { type : 'NOTIFY', payload : data })\r\n    }   \r\n    return (\r\n        <div className=\"mt-4 px-5 py-5 signin bg-light container\">\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form-group my-3\">\r\n                    <label htmlFor=\"emailInp\">Email address</label>\r\n                    <input type=\"text\" name=\"email\" className=\"form-control\" id=\"emailInp\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" onChange={inputChangeHandle}/>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">We&apos;ll never share your email with anyone else.</small>\r\n                </div>\r\n                <div className=\"form-group my-3\">\r\n                    <label htmlFor=\"passwordInp\">Password</label>\r\n                    <input ref={ passwordInp}  name=\"password\" type=\"password\" className=\"form-control\" id=\"passwordInp\" placeholder=\"Password\" onChange={inputChangeHandle}/>\r\n                </div>\r\n                <div className=\"form-group my-3\">\r\n                    <label htmlFor=\"cf-passwordInp\">Confirm Password</label>\r\n                    <input ref={ passwordInp2 }  name=\"cf_password\" type=\"password\" className=\"form-control\" id=\"cf-passwordInp\" placeholder=\"Password\" onChange={inputChangeHandle}/>\r\n                </div>\r\n                <div className=\"form-group form-check my-3\">\r\n                    <input type=\"checkbox\"  className=\"form-check-input\" id=\"checkout\" onChange={(e) => handleChange(e)} />\r\n                    <label className=\"form-check-label\" htmlFor=\"checkout\">Check Password</label>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary w-100\">Submit</button>\r\n                <small>already have an account ? <Link href=\"/signin\">signin</Link></small>\r\n            </form>\r\n        </div>  \r\n    )\r\n};\r\n\r\nRegister.getLayout = function pageLayout(page){\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <Notify />\r\n            {page}\r\n        </>\r\n    )\r\n}","C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\signin.js",["224"],[],"C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\users\\edit-user\\[id].js",["225"],[],"import { useDispatch, useSelector } from 'react-redux';\r\nimport { useRouter } from 'next/router';\r\nimport { useState, useEffect } from 'react';\r\nimport { patchData } from 'utils/fetchData';\r\nimport { updateItem } from 'store/Actiontypes';\r\n\r\nexport default function EditUser() {\r\n    const { auth, users } = useSelector(state => state)\r\n\r\n    const router = useRouter();\r\n    const dispatch = useDispatch();\r\n    const { id } = router.query\r\n    \r\n    const [ user, setUser ] = useState({})\r\n    const [ isAdmin, setIsAdmin ] = useState( null )\r\n    \r\n    \r\n    useEffect(() => {\r\n        if(users) { \r\n            const arr = users.filter(user => user._id === id );\r\n            setUser(arr[0])\r\n        }\r\n        \r\n    }, [users])\r\n    \r\n    useEffect(() => {\r\n        if(user) { \r\n            setIsAdmin(user.role === 'admin' ? true : false)\r\n        }\r\n        \r\n    }, [user])\r\n    \r\n    if( !auth || auth.user && auth.user.role !== 'admin') return null\r\n    \r\n    const handleCheck = (e) => {\r\n        if( auth.user.role === 'admin' &&  !auth.user.root ){\r\n            dispatch( { type: 'NOTIFY', payload: {error: 'you must be a root admin to commit changes'}})\r\n        }else if( auth.user._id === id ) {\r\n            dispatch( { type: 'NOTIFY', payload: {error: 'root admins cannot commit changes for their own account'}})\r\n        }else { \r\n            setIsAdmin(!isAdmin);\r\n            \r\n            patchData(`http://localhost:3000/api/users/changerole/${user._id}`, {isAdmin: e.target.checked}, auth.access_token)\r\n                .then( response => response.json())\r\n                .then( result => { console.log(result) });\r\n\r\n            dispatch(updateItem(users, user._id, { ...user, role: e.target.checked ? 'admin' : 'user'}, 'ADD_USERS' ))\r\n        } \r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                user && \r\n                <div className=\"container\">\r\n                    <button className=\"btn btn-secondary\" onClick={() => router.back()}><i style={{zIndex: '102'}} className=\"text-white fas fa-arrow-left\"></i>go back</button>\r\n                    <div className=\"col-md-8 my-3 mx-auto\">\r\n                        <h2>{ user._id }</h2>\r\n                        <div className=\"form-group\">\r\n                        <label htmlFor=\"userEmail\" className=\"d-block\">Email:</label>\r\n                            <input type=\"text\" name=\"email\" className=\"form-control\" disabled id=\"userEmail\" value={user.email}/>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"userAdmin\" >IsAdmin</label>\r\n                            <input type=\"checkbox\" checked={isAdmin} onChange={handleCheck} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}","C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\users\\index.js",["226"],[],"C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\_app.js",[],[],"C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\pages\\_document.js",[],[],"C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\components\\cartItem.js",["227"],[],"import { useDispatch, useSelector } from \"react-redux\"\r\nimport { increaseItem, decreaseItem } from 'store/Actiontypes';\r\nexport default function CartItem({ item }) {\r\n    const cart = useSelector( state => state.cart );\r\n    const dispatch = useDispatch();\r\n    \r\n    \r\n    return (\r\n        <>\r\n            <tr style={{ borderTop: \"1px solid black\"}} >\r\n                <td style={{ width: \"100px\", overflow:'hidden'}}>\r\n                    <img src={item.images[0].url} alt={item.images[0].url} className=\" w-100  img-thumbnail\" style={{ minWidth: '80px', height: '80px'}} />\r\n                </td>\r\n                <td style={{ minWidth: \"200px\", textAlign: 'center'}} >\r\n                    <h5 className=\"text-capitalize\">{ item.title } </h5>\r\n                    <h6 className=\"text-danger\">$ { item.quantity * item.price }</h6>\r\n                    <h6 className=\"text-danger\">inStock : { item.inStock }</h6>\r\n                </td>\r\n                <td style={{ minWidth: \"200px\", textAlign: 'center'}} >\r\n                    <button onClick={() => dispatch(decreaseItem(cart, item._id))} className=\"btn btn-outlined\" disabled={item.quantity === 1 ? true : false}> - </button>\r\n                    <span className=\"px-2\"> { item.quantity } </span>\r\n                    <button onClick={() => dispatch(increaseItem(cart, item._id))}className=\"btn btn-outlined\" disabled={ item.quantity === item.inStock ? true : false}> + </button>\r\n                </td>\r\n                <td>\r\n                    <i  data-toggle=\"modal\" data-target=\"#exampleModal\" onClick={ () => dispatch({ type: 'MODAL', payload: {item: item, type: 'delete' }})} className=\"btn btn-danger fas fa-trash-alt\"></i>\r\n                </td>\r\n            </tr>\r\n        </>\r\n    )\r\n}","C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\components\\filter.js",["228"],[],"import filtering from \"utils/filtering\"\r\nimport { useEffect, useState } from 'react';\r\nimport { useRouter } from \"next/router\";\r\n\r\nexport default function Filter({ categories }){\r\n    const router = useRouter();\r\n    const [ category, setCategory ] = useState(router.query.category || '');\r\n    const [ search, setSearch ] = useState('');\r\n    \r\n\r\n    useEffect(() => {\r\n            filtering({router, search: search ? search.toLowerCase() : 'all'})\r\n    }, [search])\r\n\r\n    const handleCategory = (e) => {\r\n        setCategory(e.target.value);\r\n        filtering({router, category: e.target.value})\r\n    };\r\n    return (\r\n        <div className=\"filter my-2 d-flex\">\r\n            <div className=\"input-group w-25\">\r\n                <div className=\"input-group-prepend\" >\r\n                    <span className=\"input-group-text\">categroy</span>\r\n                </div>\r\n                <select value={category} className=\"form-control\" onChange={handleCategory}>\r\n                    <option value=\"all\">All Products</option>\r\n                    {\r\n                        categories.map(cat => (\r\n                            <option key={cat._id} value={cat._id} >{cat.name}</option>\r\n                        ))\r\n                    }\r\n                </select>\r\n            </div>\r\n            <input type=\"text\" placeholder=\"search...\" name=\"title\" className=\"form-control w-50\" onChange={(e) => setSearch(e.target.value)}/>\r\n            <select className=\"form-control w-25\" onChange={(e) => {filtering({router, sort: e.target.value})}}>\r\n                <option value=\"-createdAt\">newest</option>\r\n                <option value=\"oldest\">oldest</option>\r\n                <option value=\"-sold\">best sell</option>\r\n                <option value=\"price\">price low-high</option>\r\n                <option value=\"-price\">price high-low</option>\r\n            </select>  \r\n        </div>\r\n    )\r\n};\r\n\r\n","C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\components\\layout\\footer.js",[],[],"C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\components\\layout\\navbar.js",["229","230"],[],"import Cookies from 'js-cookie';\r\nimport Link from 'next/link';\r\nimport { useRouter } from 'next/router';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport styles from 'styles/Navbar.module.css';\r\n\r\nfunction Navbar(){\r\n    const dispatch = useDispatch();\r\n    const cart = useSelector(state => state.cart);\r\n    const router = useRouter(); \r\n    \r\n    const handleLogout = () => {\r\n        localStorage.removeItem('firstlogin');\r\n        Cookies.remove('refreshToken');\r\n        dispatch( { type : 'AUTH', payload : {}});\r\n        dispatch( { type : 'NOTIFY', payload : {success : 'logged out'}});\r\n        router.push('/')\r\n    }\r\n    const loggedRouter = () => {\r\n        return (\r\n            <li className=\"nav-item\">\r\n                <div className=\"dropdown \">\r\n                    \r\n                    <a href=\"#\" onClick={e => e.preventDefault()} className=\"mx-2 dropdown-toggle\" type=\"button\" id=\"dropdownMenu2\" data-toggle=\"dropdown\"  >user</a>\r\n                    <img src={auth.user.avatar} style={{width : '50px', height: '40px'}} className=\"img-thumbnail rounded\"  />\r\n                \r\n                    <div style={{position: 'flex'}} className={ ` dropdown-menu ` } aria-labelledby=\"dropdownMenu2\">\r\n                        {\r\n                            auth.user.role === 'admin' &&\r\n                            (<>\r\n                                <Link href=\"/users\"><button className=\"dropdown-item\">Users</button></Link>\r\n                                <Link href=\"/create\"><button className=\"dropdown-item\">Create</button></Link>\r\n                                <Link href=\"/categories\"><button className=\"dropdown-item\">Categories</button></Link>\r\n                            </>)\r\n                        }\r\n                        <Link href=\"/profile\"><button className=\"dropdown-item\" type=\"button\">profile</button></Link>\r\n                        <div className=\"dropdown-divider\"></div>\r\n                        <button className=\"dropdown-item\" onClick={handleLogout} type=\"button\">logout</button>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        )\r\n    }\r\n    const auth  = useSelector( state => state.auth )\r\n    const isActive = (r) => {\r\n        if(r === router.pathname){\r\n            return  \" active\"\r\n        } else {\r\n            return \"\"\r\n        }\r\n    }\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <a className=\"navbar-brand\" href=\"#\">Online Shop</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\" >\r\n                <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item\">\r\n                        <Link href=\"/\"><a className={ `${styles.navlink} nav-link` + isActive('/')} aria-current=\"page\" href=\"#\">Home</a></Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link href=\"/cart\"><a className={`${styles.navlink} nav-link` + isActive('/cart')} ><i className=\"fas fa-shopping-cart position-relative\" aria-hidden=\"true\"><span style={{backgroundColor: \"red\", padding: '2px 5px', borderRadius: '50%', left: '12px', top: '-17px'}} className=\"text-white position-absolute\">{cart.length}</span></i>Cart</a></Link>\r\n                    </li>\r\n                    {\r\n                        Object.keys(auth).length === 0 ?\r\n                        <li className=\"nav-item\">\r\n                            <Link href=\"/signin\" ><a className={`${styles.navlink} nav-link` + isActive('/signin')}><i aria-hidden=\"true\" className=\"fas fa-user\"></i>SignIn</a></Link>\r\n                        </li>\r\n                        : loggedRouter()\r\n                    }\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default Navbar;","C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\components\\loading.js",[],[],"C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\components\\modal.js",[],[],"C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\components\\notify.js",[],[],"C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\components\\orderItem.js",[],[],"C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\components\\productItem.js",["231"],[],"import { useSelector, useDispatch } from 'react-redux';\r\nimport { updateItem } from 'store/Actiontypes';\r\nimport { addToCart } from 'store/Actiontypes';\r\n\r\nconst ProductItem = ({ product }) => {\r\n    const { cart, auth, products } = useSelector(state => state)\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n     //user card buttons ui\r\n    const userButtons = (product) => {\r\n        return (\r\n        <>\r\n            <a href={`/products/${product._id}`} className=\"flex-fill w-100 mx-1 btn btn-primary\">view</a>\r\n            <button onClick={() => dispatch(addToCart(product, cart))} className=\" flex-fill btn w-100 btn-success mx-1\">buy</button>\r\n        </>\r\n        )\r\n    };\r\n\r\n\r\n    //admin card buttons ui\r\n    const adminButtons = (product) => {\r\n        return (\r\n        <>\r\n            <a href={`/create/${product._id}`} className=\"flex-fill w-100 mx-1 btn btn-primary\">Edit</a>\r\n            <button className=\" flex-fill btn w-100 btn-danger mx-1\" data-toggle=\"modal\" data-target=\"#exampleModal\" onClick={() => dispatch({type: 'MODAL', payload: { title : product.title, item: product, auth, actionType: 'deleteProduct' }})}>Delete</button>\r\n        </>\r\n        )\r\n    };\r\n\r\n\r\n\r\n    const handleCheck = (product) => {\r\n        dispatch(updateItem(products, product._id, {...product, checked: !product.checked}, 'ADD_PRODUCT'));\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"card\" style={{position: \"relative\", width: '18rem'}}>\r\n          \r\n          {\r\n            auth.user && auth.user.role ==='admin' && \r\n            <span><input type=\"checkbox\" checked={product.checked}  style={{position:'absolute'}} onChange={() => handleCheck(product) } /></span>\r\n          }\r\n          \r\n          <img className=\"card-img-top\" src={product.images && product.images[0].url} alt=\"Card image cap\" />\r\n          <div className=\"card-body\">\r\n            <div className=\"stock d-flex justify-content-between\">\r\n              <h6 className=\"text-danger\">\r\n                {product.price}$\r\n              </h6>\r\n              <h6 className=\"text-danger\">\r\n                {\r\n                  product.inStock > 0 ? \r\n                  \"inStock : \" + product.inStock\r\n                  : \"out of stock\"\r\n                } | sold: { product.sold}\r\n              </h6>\r\n            </div>\r\n            <h5 className=\"card-title text-capitalize\">{ product.title }</h5>\r\n            <p className=\"card-text\">{ product.description }</p>\r\n            <div className=\"d-flex justify-content-between\">\r\n              {\r\n                auth.user && auth.user.role === 'admin' ? \r\n                adminButtons(product) :\r\n                userButtons(product) \r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n}\r\n\r\nexport default ProductItem","C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\components\\startup.js",["232","233","234"],[],"import { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from 'react';\r\nimport { getData } from \"utils/fetchData\";\r\n\r\n\r\nexport default function StartUp( { children } ){\r\n    const dispatch = useDispatch();\r\n    const { cart, auth } = useSelector(state => state)\r\n    \r\n    useEffect(() => {\r\n        const firstLogin = localStorage.getItem('firstlogin');\r\n        if(firstLogin) {\r\n                getData('/auth/accessToken')\r\n                    .then(response => response.json())\r\n                    .then(result => {\r\n                        if(result.error) return dispatch({ type : 'NOTIFY', payload : result})\r\n                        dispatch({ type: 'AUTH', payload: result})\r\n                    })\r\n                \r\n                }\r\n                getData('/categories')\r\n                    .then(response => response.json())\r\n                    .then( result => {\r\n                        if(!result.error) return dispatch( { type: 'ADD_CAT', payload: result })\r\n                    })\r\n                \r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const __next__cart = JSON.parse(localStorage.getItem('nextCart'));\r\n        if(__next__cart && __next__cart.length > 0) {\r\n            dispatch( { type: 'ADD_CART', payload : __next__cart})\r\n        }\r\n    }, [])\r\n    \r\n    \r\n    useEffect( () => {\r\n        let newCart = JSON.stringify(cart);\r\n        localStorage.setItem('nextCart', newCart)\r\n    }, [cart]);\r\n    \r\n    \r\n    useEffect(() => {\r\n        if(auth.access_token) {\r\n            getData('/orders', auth.access_token)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    if( data.error ) {\r\n                        return dispatch( {type : 'NOTIFY', payload : data} )\r\n                    } \r\n                    dispatch({ type : 'ADD_ORDERS', payload : data})\r\n                })\r\n        }\r\n        if(auth.user && auth.user.role ==='admin') {\r\n            getData('/users', auth.access_token)\r\n                .then( response => response.json())\r\n                .then( result => {\r\n                    if( result.error ) return dispatch({ type: 'NOTIFY', payload: result})\r\n                    \r\n                    dispatch({ type: 'ADD_USERS', payload : result})\r\n                })\r\n        }   \r\n    }, [auth])\r\n\r\n    return (\r\n        <>\r\n            {children}\r\n        </>\r\n    )\r\n}","C:\\Users\\Ali\\Desktop\\ecommerc project\\e-commerce\\components\\toast.js",[],[],{"ruleId":"235","severity":1,"message":"236","line":170,"column":41,"nodeType":"237","endLine":170,"endColumn":129},{"ruleId":"238","severity":1,"message":"239","line":30,"column":6,"nodeType":"240","endLine":30,"endColumn":20,"suggestions":"241"},{"ruleId":"238","severity":1,"message":"242","line":48,"column":6,"nodeType":"240","endLine":48,"endColumn":16,"suggestions":"243"},{"ruleId":"235","severity":1,"message":"236","line":25,"column":21,"nodeType":"237","endLine":25,"endColumn":132},{"ruleId":"244","severity":1,"message":"245","line":25,"column":21,"nodeType":"237","endLine":25,"endColumn":132},{"ruleId":"235","severity":1,"message":"236","line":29,"column":40,"nodeType":"237","endLine":29,"endColumn":243},{"ruleId":"235","severity":1,"message":"236","line":65,"column":25,"nodeType":"237","endLine":65,"endColumn":104},{"ruleId":"238","severity":1,"message":"246","line":26,"column":8,"nodeType":"240","endLine":26,"endColumn":16,"suggestions":"247"},{"ruleId":"235","severity":1,"message":"236","line":91,"column":73,"nodeType":"237","endLine":91,"endColumn":205},{"ruleId":"238","severity":1,"message":"248","line":19,"column":8,"nodeType":"240","endLine":19,"endColumn":14,"suggestions":"249"},{"ruleId":"238","severity":1,"message":"248","line":21,"column":8,"nodeType":"240","endLine":21,"endColumn":14,"suggestions":"250"},{"ruleId":"238","severity":1,"message":"251","line":24,"column":8,"nodeType":"240","endLine":24,"endColumn":15,"suggestions":"252"},{"ruleId":"235","severity":1,"message":"236","line":40,"column":41,"nodeType":"237","endLine":40,"endColumn":163},{"ruleId":"235","severity":1,"message":"236","line":12,"column":21,"nodeType":"237","endLine":12,"endColumn":156},{"ruleId":"238","severity":1,"message":"248","line":13,"column":8,"nodeType":"240","endLine":13,"endColumn":16,"suggestions":"253"},{"ruleId":"235","severity":1,"message":"236","line":25,"column":21,"nodeType":"237","endLine":25,"endColumn":127},{"ruleId":"244","severity":1,"message":"245","line":25,"column":21,"nodeType":"237","endLine":25,"endColumn":127},{"ruleId":"235","severity":1,"message":"236","line":48,"column":11,"nodeType":"237","endLine":48,"endColumn":110},{"ruleId":"238","severity":1,"message":"239","line":27,"column":8,"nodeType":"240","endLine":27,"endColumn":10,"suggestions":"254"},{"ruleId":"238","severity":1,"message":"239","line":34,"column":8,"nodeType":"240","endLine":34,"endColumn":10,"suggestions":"255"},{"ruleId":"238","severity":1,"message":"239","line":63,"column":8,"nodeType":"240","endLine":63,"endColumn":14,"suggestions":"256"},"@next/next/no-img-element","Do not use `<img>` element. Use `<Image />` from `next/image` instead. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["257"],"React Hook useEffect has a missing dependency: 'checkTheCheck'. Either include it or remove the dependency array.",["258"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has missing dependencies: 'id' and 'router'. Either include them or remove the dependency array.",["259"],"React Hook useEffect has a missing dependency: 'router'. Either include it or remove the dependency array.",["260"],["261"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["262"],["263"],["264"],["265"],["266"],{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},{"desc":"271","fix":"272"},{"desc":"273","fix":"274"},{"desc":"273","fix":"275"},{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"280","fix":"282"},{"desc":"283","fix":"284"},"Update the dependencies array to be: [dispatch, productsList]",{"range":"285","text":"286"},"Update the dependencies array to be: [checkTheCheck, products]",{"range":"287","text":"288"},"Update the dependencies array to be: [id, orders, router]",{"range":"289","text":"290"},"Update the dependencies array to be: [auth, router]",{"range":"291","text":"292"},{"range":"293","text":"292"},"Update the dependencies array to be: [id, users]",{"range":"294","text":"295"},"Update the dependencies array to be: [router, search]",{"range":"296","text":"297"},"Update the dependencies array to be: [dispatch]",{"range":"298","text":"299"},{"range":"300","text":"299"},"Update the dependencies array to be: [auth, dispatch]",{"range":"301","text":"302"},[899,913],"[dispatch, productsList]",[1176,1186],"[checkTheCheck, products]",[779,787],"[id, orders, router]",[628,634],"[auth, router]",[665,671],[725,732],"[id, users]",[458,466],"[router, search]",[1052,1054],"[dispatch]",[1300,1302],[2309,2315],"[auth, dispatch]"]